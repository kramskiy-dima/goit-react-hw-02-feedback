{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statistic","item","value","style","color","FeedbackOptions","options","onLeaveFeedback","map","btn","index","type","onClick","Section","title","children","container","Notification","message","App","state","e","feedbackButton","target","textContent","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","percentage","Math","ceil","this","totalValueFeedback","totalValuePercentage","feedBackOptionsArr","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B,uICwC3CC,EArCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAGF,UAAWC,IAAEE,KAAhB,mBACQ,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BT,OAEnC,oBAAGK,UAAWC,IAAEE,KAAhB,sBACW,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BR,OAEtC,oBAAGI,UAAWC,IAAEE,KAAhB,kBACO,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BP,OAElC,oBAAGG,UAAWC,IAAEE,KAAhB,oBACS,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BN,OAEpC,oBAAGE,UAAWC,IAAEE,KAAhB,+BAEE,sBACEH,UAAWC,IAAEG,MACbC,MAAO,CAAEC,MAAOP,GAAsB,GAAK,QAAU,OAFvD,SAIGA,IANL,W,gBCMSQ,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAKC,GAAN,OACX,wBACEZ,UAAWC,IAAEU,IAEbE,KAAK,OACLC,QAASL,EAJX,SAMGE,GAJIC,S,gBCOAG,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASjB,UAAWC,IAAEiB,UAAtB,UACE,oBAAIlB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,MCGQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC8DEC,E,4MA3DbC,MAAQ,CACN3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,gBAAkB,SAACc,GACjB,IAAMC,EAAiBD,EAAEE,OAAOC,YAChC,EAAKC,UAAS,SAACC,GACb,OAAO,eAAGJ,EAAiBI,EAAUJ,GAAkB,O,EAI3DK,mBAAqB,WAKnB,OAJmBC,OAAOC,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAK7B,GACxD,OAAO6B,EAAM7B,IACZ,I,EAKL8B,gCAAkC,WAChC,IAAMC,EAAaC,KAAKC,KACrB,EAAKf,MAAM3B,KAAO,EAAKkC,qBAAwB,KAElD,OAAOM,GAA0B,G,4CAGnC,WAAU,IAAD,EACwBG,KAAKhB,MAA5B3B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjB0C,EAAqBD,KAAKT,qBAC1BW,EAAuBF,KAAKJ,kCAC5BO,EAAqBX,OAAOY,KAAKJ,KAAKhB,OAC5C,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASiC,EACThC,gBAAiB6B,KAAK7B,oBAG1B,cAAC,EAAD,CAASO,MAAM,aAAf,SAC0B,IAAvBuB,EACC,cAAC,EAAD,CAAcnB,QAAQ,sBAEtB,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyC,EACPxC,mBAAoByC,a,GAnDhBG,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BxD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.f020b262.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\",\"value\":\"Statistics_value__2eXJD\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.statistic}>\n      <p className={s.item}>\n        good: <span className={s.value}>{good}</span>\n      </p>\n      <p className={s.item}>\n        neutral: <span className={s.value}>{neutral}</span>\n      </p>\n      <p className={s.item}>\n        bad: <span className={s.value}>{bad}</span>\n      </p>\n      <p className={s.item}>\n        total: <span className={s.value}>{total}</span>\n      </p>\n      <p className={s.item}>\n        Positive Feedback:\n        <span\n          className={s.value}\n          style={{ color: positivePercentage >= 50 ? \"green\" : \"red\" }}\n        >\n          {positivePercentage}\n        </span>\n        %\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((btn, index) => (\n        <button\n          className={s.btn}\n          key={index}\n          type=\"text\"\n          onClick={onLeaveFeedback}\n        >\n          {btn}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (e) => {\n    const feedbackButton = e.target.textContent;\n    this.setState((prevState) => {\n      return { [feedbackButton]: prevState[feedbackButton] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const totalValue = Object.values(this.state).reduce((acc, value) => {\n      return acc + value;\n    }, 0);\n\n    return totalValue;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.ceil(\n      (this.state.good / this.countTotalFeedback()) * 100\n    );\n    return percentage ? percentage : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalValueFeedback = this.countTotalFeedback();\n    const totalValuePercentage = this.countPositiveFeedbackPercentage();\n    const feedBackOptionsArr = Object.keys(this.state);\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedBackOptionsArr}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalValueFeedback === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalValueFeedback}\n              positivePercentage={totalValuePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__37ABw\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};"],"sourceRoot":""}